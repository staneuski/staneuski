# https://github.com/gokcehan/lf/wiki/Tips

cmd on-select &{{
  lf -remote "send $id set statfmt \"$(eza -ld --color=always "$f" | sed 's/\\/\\\\/g;s/"/\\"/g')\""
}}

cmd on-cd &{{
  fmt="$(STARSHIP_SHELL= starship prompt | sed 's/\\/\\\\/g;s/"/\\"/g')"
  lf -remote "send $id set promptfmt \"$fmt\""
}}

#: Preview {{{
set previewer ~/.config/lf/preview.sh
#: }}}

#: Functions {{{
#: Set lf bat theme
cmd preview-toggle &{{
  set -f
  [[ $(yq '.preview.theme' ~/.config/lf/config.yaml) == "light" ]] &&
    ~/.config/toggle.sh dark ||
    ~/.config/toggle.sh light
}}

#: Compress selected files
cmd archive &{{
  set -f
  tar -caf ${1} $(echo $fx | sed -e "s~${PWD}/~~g") -C $PWD && rm -rf $fx # &
  # wait
  lf -remote "send ${id} unselect"
}}

cmd unxz &{{
  set -f
  [ ! -f $f ] &&
    return
  [ ${f##*.} != .xz ] &&
  unxz --compress --force -9e --threads=0 $f ||
  unxz --uncompress --force -9e --threads=0 $f
}}

#: Create directory with selected files
cmd mkdir-mv ${{
  set -f
  mkdir -p $1
  mv -- $fx $1
}}

#: Create file with/or directory
cmd create ${{
  set -f
  if [[ "${1}" == */ ]]; then
    mkdir -p $1
    # lf -remote "send ${id} cd ${1}"
  else
    mkdir -p -- $(dirname -- $1)
    touch -- $1
    # lf -remote "send ${id} select ${1}"
  fi
}}

#: Symlinks ( https://github.com/gokcehan/lf/wiki/Tips#creating-links )
# y (select for copy) and P to paste symlink
# d (select for cut) and P to paste hard link
cmd link %{{
  set -- $(cat ~/.local/share/lf/files)
  mode="$1"
  shift
  if [ "$#" -lt 1 ]; then
    lf -remote "send $id echoerr no files to link"
    exit
  fi
  case "$mode" in
    # 'copy' mode indicates a symlink
    copy)
      ln -sr -t . -- "$@"
      ;;
    # while 'move' mode indicates a hard link
    move)
      ln -t . -- "$@"
      lf -remote "send clear"
      ;;
  esac
}}

#: Find
cmd fzf-jump ${{
  export FZF_DEFAULT_OPTS="--ansi --preview-window 'right:60%' --preview 'bat --color=always --style=header,grid --line-range :300 {}'"
  res="$(fzf --reverse --header='Jump to location')"
  if [ -n "$res" ]; then
    [ -d "$res" ] && cmd="cd" || cmd="select"
    res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
    lf -remote "send $id $cmd \"$res\""
  fi
}}
cmd fzf-ripgrep ${{
  RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
  res="$(
    FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
      fzf --bind "change:reload:$RG_PREFIX {q} || true" --ansi --layout=reverse --header 'Search in files' \
        | cut -d':' -f1 | sed 's/\\/\\\\/g;s/"/\\"/g'
  )"
  [ -n "$res" ] && lf -remote "send $id select \"$res\""
}}
# }}

#: Group select
cmd globtoggle ${{
  lf -remote "send ${id} toggle $(ls -d ${*} | xargs)"
}}
#: }}}

#: Interface {{{
set mouse true
set hidden true
#: }}}

#: Personalisation {{{
set dupfilefmt '%b%n%e'
#: }}}

#: Key bindings {{{
map <c-z> $ kill -STOP $PPID
map B push :preview-toggle<enter>

#: Select
map + push :globtoggle<space>

#: Create, delete
map <enter> push :create<space>
map <a-n> push :mkdir-mv<space>
map D delete
map L :link

#: tar
map a push :archive<space>
map <a-a> :unxz
map x &tar -xf "$f" && rm -rf "$f"

#: Select / toggle
map <space> :toggle
map <s-down> :toggle; down
map <s-up> :toggle; up

#: https://github.com/gokcehan/lf/blob/master/doc.md#quick-reference
#: Use enter for shell commands
# map <enter> shell

#: Find
map <c-f> :fzf-jump
map <c-g> :fzf-ripgrep

#: Preview
map i $bat --paging=always "$f"
map <f-3> $less -nR "$f"

#: Edit
# map e $vim "$f"
map <f-4> $vim "$f"
#: }}}
